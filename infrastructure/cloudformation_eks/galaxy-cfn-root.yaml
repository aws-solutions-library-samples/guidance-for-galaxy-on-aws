AWSTemplateFormatVersion: 2010-09-09
Description: >-
  galaxy-cfn-root.yaml: Root stack for installing the Guidance for Galaxy on AWS (SOXXXXX).
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: VPC network configuration
        Parameters:
          - NumberOfAZs
          - AvailabilityZones
          - VPCCIDR
          - PrivateSubnet1CIDR
          - PrivateSubnet2CIDR
          - PrivateSubnet3CIDR
          - PublicSubnet1CIDR
          - PublicSubnet2CIDR
          - PublicSubnet3CIDR
      - Label:
          default: Default EKS node group configuration
        Parameters:
          - NodeInstanceType
          - NumberOfNodes
          - MaxNumberOfNodes
          - NodeInstanceFamily
      - Label:
          default: Galaxy infrastructure dependencies
        Parameters:
          - RabbitMQInstanceSize
      - Label:
          default: AWS Quick Start configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
          - QSS3BucketRegion
    ParameterLabels:
      NumberOfAZs:
        default: Number of Availability Zones
      AvailabilityZones:
        default: Availability Zones
      KeyPairName:
        default: SSH key name
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PrivateSubnet3CIDR:
        default: Private subnet 3 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      PublicSubnet3CIDR:
        default: Public subnet 3 CIDR
      QSS3BucketName:
        default: Quick Start S3 bucket name
      QSS3KeyPrefix:
        default: Quick Start S3 key prefix
      QSS3BucketRegion:
        default: Quick Start S3 bucket Region
      RemoteAccessCIDR:
        default: Allowed external access CIDR
      VPCCIDR:
        default: VPC CIDR
      NodeInstanceType:
        default: Instance type
      NumberOfNodes:
        default: Number of nodes
      MaxNumberOfNodes:
        default: Maximum number of nodes
      NodeInstanceFamily:
        default: Node instance family
      RabbitMQInstanceSize:
        default: RabbitMQ instance

Parameters:
  NumberOfAZs:
    Type: String
    Description: >-
      Number of Availability Zones to use in the VPC. This must match the value
      entered for the AvailabilityZones parameter.
    AllowedValues: [2, 3]
    Default: 3
  AvailabilityZones:
    Type: List<AWS::EC2::AvailabilityZone::Name>
    Description: >-
      List of Availability Zones to use for the subnets in the VPC. Three
      Availability Zones are used for this deployment.
  PrivateSubnet1CIDR:
    Type: String
    Description: >-
      CIDR block for private subnet 1, located in Availability Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/19
  PrivateSubnet2CIDR:
    Type: String
    Description: >-
      CIDR block for private subnet 2, located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.32.0/19
  PrivateSubnet3CIDR:
    Type: String
    Description: >-
      CIDR block for private subnet 3, located in Availability Zone 3.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.64.0/19
  PublicSubnet1CIDR:
    Type: String
    Description: >-
      CIDR block for the public (DMZ) subnet 1, located in Availability Zone 1.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.128.0/20
  PublicSubnet2CIDR:
    Type: String
    Description: >-
      CIDR block for the public (DMZ) subnet 2, located in Availability Zone 2.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.144.0/20
  PublicSubnet3CIDR:
    Type: String
    Description: >-
      CIDR block for the public (DMZ) subnet 3, located in Availability Zone 3.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.160.0/20
  VPCCIDR:
    Type: String
    Description: CIDR block for the VPC.
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: >-
      CIDR block parameter must be in the form x.x.x.x/16-28.
    Default: 10.0.0.0/16
  QSS3BucketName:
    Type: String
    Description: >-
      S3 bucket name for the Quick Start assets. This string can include
      numbers, lowercase letters, and hyphens (-). It cannot start or end with
      a hyphen (-).
    AllowedPattern: ^[0-9a-z]+([0-9a-z-]*[0-9a-z])*$
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, and
      hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
  QSS3KeyPrefix:
    Type: String
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-),
      periods (.) and forward slash (/).
    AllowedPattern: ^[0-9a-zA-Z-/.]*$
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), periods (.) and forward slash (/).
    Default: quickstart-amazon-eks/
  QSS3BucketRegion:
    Type: String
    Description: >-
      Region where the Quick Start S3 bucket (QSS3BucketName) is hosted. When
      using your own bucket, you must specify this value.
    Default: us-east-1
  NodeInstanceType:
    Type: String
    Description: EC2 instance type.
    AllowedValues: [
      a1.medium, a1.large, a1.xlarge, a1.2xlarge, a1.4xlarge, a1.metal,
      c1.medium, c1.xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge, c3.8xlarge,
      c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge,
      c5.large, c5.xlarge, c5.2xlarge, c5.4xlarge, c5.9xlarge, c5.12xlarge, c5.18xlarge, c5.24xlarge, c5.metal,
      c5a.large, c5a.xlarge, c5a.2xlarge, c5a.4xlarge, c5a.8xlarge, c5a.12xlarge, c5a.16xlarge, c5a.24xlarge,
      c5ad.large, c5ad.xlarge, c5ad.2xlarge, c5ad.4xlarge, c5ad.8xlarge, c5ad.12xlarge, c5ad.16xlarge, c5ad.24xlarge,
      c5d.large, c5d.xlarge, c5d.2xlarge, c5d.4xlarge, c5d.9xlarge, c5d.12xlarge, c5d.18xlarge, c5d.24xlarge, c5d.metal,
      c5n.large, c5n.xlarge, c5n.2xlarge, c5n.4xlarge, c5n.9xlarge, c5n.18xlarge, c5n.metal,
      c6a.large, c6a.xlarge, c6a.2xlarge, c6a.4xlarge, c6a.8xlarge, c6a.12xlarge, c6a.16xlarge, c6a.24xlarge, c6a.32xlarge, c6a.48xlarge, c6a.metal,
      c6g.medium, c6g.large, c6g.xlarge, c6g.2xlarge, c6g.4xlarge, c6g.8xlarge, c6g.12xlarge, c6g.16xlarge, c6g.metal,
      c6gd.medium, c6gd.large, c6gd.xlarge, c6gd.2xlarge, c6gd.4xlarge, c6gd.8xlarge, c6gd.12xlarge, c6gd.16xlarge, c6gd.metal,
      c6gn.medium, c6gn.large, c6gn.xlarge, c6gn.2xlarge, c6gn.4xlarge, c6gn.8xlarge, c6gn.12xlarge, c6gn.16xlarge,
      c6i.large, c6i.xlarge, c6i.2xlarge, c6i.4xlarge, c6i.8xlarge, c6i.12xlarge, c6i.16xlarge, c6i.24xlarge, c6i.32xlarge, c6i.metal,
      c6id.large, c6id.xlarge, c6id.2xlarge, c6id.4xlarge, c6id.8xlarge, c6id.12xlarge, c6id.16xlarge, c6id.24xlarge, c6id.32xlarge, c6id.metal,
      c7g.medium, c7g.large, c7g.xlarge, c7g.2xlarge, c7g.4xlarge, c7g.8xlarge, c7g.12xlarge, c7g.16xlarge,
      cc1.4xlarge,
      cc2.8xlarge,
      cg1.4xlarge,
      cr1.8xlarge,
      d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge,
      d3.xlarge, d3.2xlarge, d3.4xlarge, d3.8xlarge,
      d3en.xlarge, d3en.2xlarge, d3en.4xlarge, d3en.6xlarge, d3en.8xlarge, d3en.12xlarge,
      dl1.24xlarge,
      f1.2xlarge, f1.4xlarge, f1.16xlarge,
      g2.2xlarge, g2.8xlarge,
      g3.4xlarge, g3.8xlarge, g3.16xlarge,
      g3s.xlarge,
      g4ad.xlarge, g4ad.2xlarge, g4ad.4xlarge, g4ad.8xlarge, g4ad.16xlarge,
      g4dn.xlarge, g4dn.2xlarge, g4dn.4xlarge, g4dn.8xlarge, g4dn.12xlarge, g4dn.16xlarge, g4dn.metal,
      g5.xlarge, g5.2xlarge, g5.4xlarge, g5.8xlarge, g5.12xlarge, g5.16xlarge, g5.24xlarge, g5.48xlarge,
      g5g.xlarge, g5g.2xlarge, g5g.4xlarge, g5g.8xlarge, g5g.16xlarge, g5g.metal,
      h1.2xlarge, h1.4xlarge, h1.8xlarge, h1.16xlarge,
      hi1.4xlarge,
      hpc6a.48xlarge,
      hpc6id.32xlarge,
      hs1.8xlarge,
      i2.xlarge, i2.2xlarge, i2.4xlarge, i2.8xlarge, i3.large, i3.xlarge, i3.2xlarge, i3.4xlarge, i3.8xlarge, i3.16xlarge, i3.metal,
      i3en.large, i3en.xlarge, i3en.2xlarge, i3en.3xlarge, i3en.6xlarge, i3en.12xlarge, i3en.24xlarge, i3en.metal,
      i4i.large, i4i.xlarge, i4i.2xlarge, i4i.4xlarge, i4i.8xlarge, i4i.16xlarge, i4i.32xlarge, i4i.metal,
      im4gn.large, im4gn.xlarge, im4gn.2xlarge, im4gn.4xlarge, im4gn.8xlarge, im4gn.16xlarge,
      inf1.xlarge, inf1.2xlarge, inf1.6xlarge, inf1.24xlarge,
      is4gen.medium, is4gen.large, is4gen.xlarge, is4gen.2xlarge, is4gen.4xlarge, is4gen.8xlarge,
      m1.small, m1.medium, m1.large, m1.xlarge,
      m2.xlarge, m2.2xlarge, m2.4xlarge,
      m3.medium, m3.large, m3.xlarge, m3.2xlarge,
      m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge, m4.10xlarge, m4.16xlarge,
      m5.large, m5.xlarge, m5.2xlarge, m5.4xlarge, m5.8xlarge, m5.12xlarge, m5.16xlarge, m5.24xlarge, m5.metal,
      m5a.large, m5a.xlarge, m5a.2xlarge, m5a.4xlarge, m5a.8xlarge, m5a.12xlarge, m5a.16xlarge, m5a.24xlarge,
      m5ad.large, m5ad.xlarge, m5ad.2xlarge, m5ad.4xlarge, m5ad.8xlarge, m5ad.12xlarge, m5ad.16xlarge, m5ad.24xlarge,
      m5d.large, m5d.xlarge, m5d.2xlarge, m5d.4xlarge, m5d.8xlarge, m5d.12xlarge, m5d.16xlarge, m5d.24xlarge, m5d.metal,
      m5dn.large, m5dn.xlarge, m5dn.2xlarge, m5dn.4xlarge, m5dn.8xlarge, m5dn.12xlarge, m5dn.16xlarge, m5dn.24xlarge, m5dn.metal,
      m5n.large, m5n.xlarge, m5n.2xlarge, m5n.4xlarge, m5n.8xlarge, m5n.12xlarge, m5n.16xlarge, m5n.24xlarge, m5n.metal,
      m5zn.large, m5zn.xlarge, m5zn.2xlarge, m5zn.3xlarge, m5zn.6xlarge, m5zn.12xlarge, m5zn.metal,
      m6a.large, m6a.xlarge, m6a.2xlarge, m6a.4xlarge, m6a.8xlarge, m6a.12xlarge, m6a.16xlarge, m6a.24xlarge, m6a.32xlarge, m6a.48xlarge, m6a.metal,
      m6g.medium, m6g.large, m6g.xlarge, m6g.2xlarge, m6g.4xlarge, m6g.8xlarge, m6g.12xlarge, m6g.16xlarge, m6g.metal,
      m6gd.medium, m6gd.large, m6gd.xlarge, m6gd.2xlarge, m6gd.4xlarge, m6gd.8xlarge, m6gd.12xlarge, m6gd.16xlarge, m6gd.metal,
      m6i.large, m6i.xlarge, m6i.2xlarge, m6i.4xlarge, m6i.8xlarge, m6i.12xlarge, m6i.16xlarge, m6i.24xlarge, m6i.32xlarge, m6i.metal,
      m6id.large, m6id.xlarge, m6id.2xlarge, m6id.4xlarge, m6id.8xlarge, m6id.12xlarge, m6id.16xlarge, m6id.24xlarge, m6id.32xlarge, m6id.metal,
      # mac1.metal,
      p2.xlarge, p2.8xlarge, p2.16xlarge,
      p3.2xlarge, p3.8xlarge, p3.16xlarge,
      p3dn.24xlarge,
      p4d.24xlarge,
      p4de.24xlarge,
      r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge,
      r4.large, r4.xlarge, r4.2xlarge, r4.4xlarge, r4.8xlarge, r4.16xlarge,
      r5.large, r5.xlarge, r5.2xlarge, r5.4xlarge, r5.8xlarge, r5.12xlarge, r5.16xlarge, r5.24xlarge, r5.metal,
      r5a.large, r5a.xlarge, r5a.2xlarge, r5a.4xlarge, r5a.8xlarge, r5a.12xlarge, r5a.16xlarge, r5a.24xlarge,
      r5ad.large, r5ad.xlarge, r5ad.2xlarge, r5ad.4xlarge, r5ad.8xlarge, r5ad.12xlarge, r5ad.16xlarge, r5ad.24xlarge,
      r5b.large, r5b.xlarge, r5b.2xlarge, r5b.4xlarge, r5b.8xlarge, r5b.12xlarge, r5b.16xlarge, r5b.24xlarge, r5b.metal,
      r5d.large, r5d.xlarge, r5d.2xlarge, r5d.4xlarge, r5d.8xlarge, r5d.12xlarge, r5d.16xlarge, r5d.24xlarge, r5d.metal,
      r5dn.large, r5dn.xlarge, r5dn.2xlarge, r5dn.4xlarge, r5dn.8xlarge, r5dn.12xlarge, r5dn.16xlarge, r5dn.24xlarge, r5dn.metal,
      r5n.large, r5n.xlarge, r5n.2xlarge, r5n.4xlarge, r5n.8xlarge, r5n.12xlarge, r5n.16xlarge, r5n.24xlarge, r5n.metal,
      r6a.large, r6a.xlarge, r6a.2xlarge, r6a.4xlarge, r6a.8xlarge, r6a.12xlarge, r6a.16xlarge, r6a.24xlarge, r6a.32xlarge, r6a.48xlarge, r6a.metal,
      r6ad.large, r6ad.xlarge, r6ad.2xlarge, r6ad.4xlarge, r6ad.8xlarge, r6ad.12xlarge, r6ad.16xlarge, r6ad.24xlarge, r6ad.32xlarge, r6ad.48xlarge, r6ad.metal,
      r6g.medium, r6g.large, r6g.xlarge, r6g.2xlarge, r6g.4xlarge, r6g.8xlarge, r6g.12xlarge, r6g.16xlarge, r6g.metal,
      r6gd.medium, r6gd.large, r6gd.xlarge, r6gd.2xlarge, r6gd.4xlarge, r6gd.8xlarge, r6gd.12xlarge, r6gd.16xlarge, r6gd.metal,
      r6i.large, r6i.xlarge, r6i.2xlarge, r6i.4xlarge, r6i.8xlarge, r6i.12xlarge, r6i.16xlarge, r6i.24xlarge, r6i.32xlarge, r6i.metal,
      r6id.large, r6id.xlarge, r6id.2xlarge, r6id.4xlarge, r6id.8xlarge, r6id.12xlarge, r6id.16xlarge, r6id.24xlarge, r6id.32xlarge, r6id.metal,
      t1.micro,
      t2.nano, t2.micro, t2.small, t2.medium, t2.large, t2.xlarge, t2.2xlarge,
      t3.nano, t3.micro, t3.small, t3.medium, t3.large, t3.xlarge, t3.2xlarge,
      t3a.nano, t3a.micro, t3a.small, t3a.medium, t3a.large, t3a.xlarge, t3a.2xlarge,
      t4g.nano, t4g.micro, t4g.small, t4g.medium, t4g.large, t4g.xlarge, t4g.2xlarge,
      u-6tb1.56xlarge, u-6tb1.112xlarge, u-6tb1.metal,
      u-9tb1.112xlarge, u-9tb1.metal,
      u-12tb1.112xlarge, u-12tb1.metal,
      u-18tb1.metal,
      u-24tb1.metal,
      vt1.3xlarge, vt1.6xlarge, vt1.24xlarge,
      x1.16xlarge, x1.32xlarge,
      x1e.xlarge, x1e.2xlarge, x1e.4xlarge, x1e.8xlarge, x1e.16xlarge, x1e.32xlarge,
      x2gd.medium, x2gd.large, x2gd.xlarge, x2gd.2xlarge, x2gd.4xlarge, x2gd.8xlarge, x2gd.12xlarge, x2gd.16xlarge, x2gd.metal,
      x2idn.16xlarge, x2idn.24xlarge, x2idn.32xlarge, x2idn.metal,
      x2iedn.xlarge, x2iedn.2xlarge, x2iedn.4xlarge, x2iedn.8xlarge, x2iedn.16xlarge, x2iedn.24xlarge, x2iedn.32xlarge, x2iedn.metal,
      x2iezn.2xlarge, x2iezn.4xlarge, x2iezn.6xlarge, x2iezn.8xlarge, x2iezn.12xlarge, x2iezn.metal,
      z1d.large, z1d.xlarge, z1d.2xlarge, z1d.3xlarge, z1d.6xlarge, z1d.12xlarge, z1d.metal
    ]
    ConstraintDescription: Must be a valid EC2 instance type.
    Default: t3.medium
  NumberOfNodes:
    Type: Number
    Description: >-
      Number of Amazon EKS node instances. The default is one for each of the
      three Availability Zones.
    MinValue: 0
    MaxValue: 450
    Default: 3
  MaxNumberOfNodes:
    Type: Number
    Description: >-
      Maximum number of Amazon EKS node instances. The default is three.
    MinValue: 0
    MaxValue: 450
    Default: 3
  NodeInstanceFamily:
    Type: String
    Description: >-
      Choose the instance family to match the value of "Node instance type".
    AllowedValues: [Standard, ARM, GPU]
    Default: Standard
  RabbitMQInstanceSize:
    Type: String
    Description: RabbitMQ instance size. Instance types other than t3.micro deployed as multi-AZ cluster.
    Default: mq.t3.micro
    AllowedValues:
      - mq.t3.micro
      - mq.m5.large
      - mq.m5.xlarge
      - mq.m5.2xlarge
      - mq.m5.4xlarge

Conditions:
  3AZDeployment: !Equals [!Ref NumberOfAZs, 3]
  2AZDeployment: !Or
    - !Equals [!Ref NumberOfAZs, 2]
    - !Equals [!Ref NumberOfAZs, 3]
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, aws-quickstart]
  RabbitMQAsCluster: !Not [!Equals [!Ref RabbitMQInstanceSize, mq.t3.micro]]

Resources:
  VPCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}submodules/quickstart-aws-vpc/templates/aws-vpc.template.yaml
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        AvailabilityZones: !Join [ ',', !Ref AvailabilityZones ]
        NumberOfAZs: !Ref NumberOfAZs
        PrivateSubnet1ACIDR: !Ref PrivateSubnet1CIDR
        PrivateSubnet2ACIDR: !Ref PrivateSubnet2CIDR
        PrivateSubnet3ACIDR: !Ref PrivateSubnet3CIDR
        PrivateSubnetATag2: kubernetes.io/role/internal-elb=
        PublicSubnet1CIDR: !Ref PublicSubnet1CIDR
        PublicSubnet2CIDR: !Ref PublicSubnet2CIDR
        PublicSubnet3CIDR: !Ref PublicSubnet3CIDR
        PublicSubnetTag2: kubernetes.io/role/elb=
        VPCCIDR: !Ref VPCCIDR

  ExistingVpcStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/amazon-eks-entrypoint-existing-vpc.template.yaml
        - S3Region: !If [UsingDefaultBucket, !Ref AWS::Region, !Ref QSS3BucketRegion]
          S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        # Network configuration
        VPCID: !GetAtt VPCStack.Outputs.VPCID
        PrivateSubnet1ID: !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        PrivateSubnet2ID: !If [2AZDeployment, !GetAtt VPCStack.Outputs.PrivateSubnet2AID, !Ref AWS::NoValue]
        PrivateSubnet3ID: !If [3AZDeployment, !GetAtt VPCStack.Outputs.PrivateSubnet3AID, !Ref AWS::NoValue]
        PublicSubnet1ID: !GetAtt VPCStack.Outputs.PublicSubnet1ID
        PublicSubnet2ID: !If [2AZDeployment, !GetAtt VPCStack.Outputs.PublicSubnet2ID, !Ref AWS::NoValue]
        PublicSubnet3ID: !If [3AZDeployment, !GetAtt VPCStack.Outputs.PublicSubnet3ID, !Ref AWS::NoValue]
        # AWS Quick Start configuration
        QSS3BucketName: !Ref QSS3BucketName
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
        QSS3BucketRegion: !Ref QSS3BucketRegion
        # Default EKS node group configuration
        NodeInstanceType: !Ref NodeInstanceType
        NumberOfNodes: !Ref NumberOfNodes
        MaxNumberOfNodes: !Ref MaxNumberOfNodes
        NodeInstanceFamily: !Ref NodeInstanceFamily
        # Amazon EKS configuration
        AdditionalEKSAdminRoleArn: !GetAtt EKSAdminRole.Arn

  EKSAdminRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 8400
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"  # required for EKS clusters with Public Endpoint disabled
                - "resources.cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue"  # required for deploying helm charts into non-EKS kubernetes clusters
                  - "kms:Decrypt"
                  - "eks:DescribeCluster"
                  - "s3:GetObject"
                  - "sts:AssumeRole"
                  - "iam:PassRole"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:CreateNetworkInterface"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeNetworkInterfaces"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DeleteNetworkInterface"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeVpcs"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeSubnets"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeRouteTables"  # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeSecurityGroups"  # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogGroup"  # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogStream"  # required for EKS clusters with Public Endpoint disabled
                  - "logs:PutLogEvents"  # required for EKS clusters with Public Endpoint disabled
                  - "lambda:UpdateFunctionConfiguration"  # required for EKS clusters with Public Endpoint disabled
                  - "lambda:DeleteFunction"  # required for EKS clusters with Public Endpoint disabled
                  - "lambda:GetFunction"  # required for EKS clusters with Public Endpoint disabled
                  - "lambda:InvokeFunction"  # required for EKS clusters with Public Endpoint disabled
                  - "lambda:CreateFunction"  # required for EKS clusters with Public Endpoint disabled
                  - "lambda:UpdateFunctionCode"  # required for EKS clusters with Public Endpoint disabled
                  - "cloudformation:ListExports"  # required for fetching contract test inputs
                  - "ecr:GetAuthorizationToken" # required for fetching charts from ECR
                  - "ecr:BatchCheckLayerAvailability" # required for fetching charts from ECR
                  - "ecr:GetDownloadUrlForLayer" # required for fetching charts from ECR
                  - "ecr:BatchGetImage" # required for fetching charts from ECR
                Resource: "*"

#########################################################
# RDS
#########################################################

  AuroraMasterSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "administrator"}']]
        GenerateStringKey: "password"
        ExcludeCharacters: '"@/\#'
        PasswordLength: 16

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for DB
      VpcId: !GetAtt VPCStack.Outputs.VPCID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !GetAtt ExistingVpcStack.Outputs.NodeGroupSecurityGroup
          FromPort: 5432
          ToPort: 5432
          IpProtocol: tcp

  AuroraPostgresCluster:
    Type: AWS::RDS::DBCluster
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      BackupRetentionPeriod: 7
      Engine: aurora-postgresql
      DatabaseName: galaxy
      MasterUsername: !Sub '{{resolve:secretsmanager:${AuroraMasterSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${AuroraMasterSecret}:SecretString:password}}'
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
      StorageEncrypted: true
      Port: 5432
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 2

  AuroraDBPrimaryInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBClusterIdentifier: !Ref AuroraPostgresCluster
      Engine: aurora-postgresql
      DBInstanceClass: db.serverless
      DBSubnetGroupName: !Ref DBSubnetGroup
      PubliclyAccessible: false

  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: DB Subnet Group
      SubnetIds:
        - !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        - !If [2AZDeployment, !GetAtt VPCStack.Outputs.PrivateSubnet2AID, !Ref AWS::NoValue]
        - !If [3AZDeployment, !GetAtt VPCStack.Outputs.PrivateSubnet3AID, !Ref AWS::NoValue]

#########################################################
# RABBITMQ
#########################################################
  
  RabbitMQBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      GenerateSecretString:
        SecretStringTemplate: !Join ['', ['{"username": "administrator"}']]
        GenerateStringKey: "password"
        ExcludeCharacters: '"@/\#, :='
        PasswordLength: 16

  RabbitMQSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RabbitMQ
      VpcId: !GetAtt VPCStack.Outputs.VPCID
      SecurityGroupIngress:
        - SourceSecurityGroupId: !GetAtt ExistingVpcStack.Outputs.NodeGroupSecurityGroup
          FromPort: 5671
          ToPort: 5671
          IpProtocol: tcp

  RabbitMQBroker:
    Type: AWS::AmazonMQ::Broker
    Properties:
      AutoMinorVersionUpgrade: true
      BrokerName: !Sub '${AWS::StackName}-rabbitmq'
      EngineType: RABBITMQ
      EngineVersion: 3.10.10
      PubliclyAccessible: false
      DeploymentMode: !If [RabbitMQAsCluster, CLUSTER_MULTI_AZ, SINGLE_INSTANCE]
      HostInstanceType: !Ref RabbitMQInstanceSize
      SecurityGroups:
        - !Ref RabbitMQSecurityGroup
      SubnetIds:
        - !GetAtt VPCStack.Outputs.PrivateSubnet1AID
        - !If [RabbitMQAsCluster, !GetAtt VPCStack.Outputs.PrivateSubnet2AID, !Ref AWS::NoValue]
        - !If [RabbitMQAsCluster, !GetAtt VPCStack.Outputs.PrivateSubnet3AID, !Ref AWS::NoValue]
      Users: 
        - 
          Username:  !Sub '{{resolve:secretsmanager:${RabbitMQBSecret}:SecretString:username}}'
          Password:  !Sub '{{resolve:secretsmanager:${RabbitMQBSecret}:SecretString:password}}'

#########################################################
# GALAXY
#########################################################

  # GalaxyEKSNamespace:
  #   Type: AWSQS::Kubernetes::Resource
  #   Properties:
  #     ClusterName: !GetAtt ExistingVpcStack.Outputs.EKSClusterName
  #     Namespace: !Sub ${AWS::StackName}
  #     Manifest: !Sub |
  #       apiVersion: v1
  #       kind: Namespace
  #       metadata:
  #         name: ${AWS::StackName}

  # GalaxyEKSSecretPostgreSQL:
  #   DependsOn: AuroraMasterSecret
  #   Type: AWSQS::Kubernetes::Resource
  #   Properties:
  #     ClusterName: !GetAtt ExistingVpcStack.Outputs.EKSClusterName
  #     Namespace: !Sub ${AWS::StackName}
  #     Manifest: !Sub
  #       - |
  #         apiVersion: v1
  #         kind: Secret
  #         type: Opaque
  #         metadata:
  #           name: galaxy.credentials.postgresql
  #           namespace: ${AWS::StackName}
  #         data:
  #           username: ${username}
  #           password: ${password}
  #       - username: !Sub '{{resolve:secretsmanager:${AuroraMasterSecret}:SecretString:username}}'
  #         password: !Sub '{{resolve:secretsmanager:${AuroraMasterSecret}:SecretString:password}}'

  GalaxyEKSSecretRabbitMQ:
    DependsOn: RabbitMQBSecret
    Type: AWSQS::Kubernetes::Resource
    Properties:
      ClusterName: !GetAtt ExistingVpcStack.Outputs.EKSClusterName
      Namespace: !Sub ${AWS::StackName}
      Manifest: !Sub
        - |
          apiVersion: v1
          kind: Secret
          type: Opaque
          metadata:
            name: galaxy.credentials.rabbitmq
            namespace: ${AWS::StackName}
          data:
            username: ${username}
            password: ${password}
        - username:
            Fn::Base64:
              !Sub '{{resolve:secretsmanager:${RabbitMQBSecret}:SecretString:username}}'
          password:
            Fn::Base64: !Sub '{{resolve:secretsmanager:${RabbitMQBSecret}:SecretString:password}}'

#   GalaxyHelm:
#     DependsOn:
#       - GalaxyEKSSecretPostgreSQL
#       - GalaxyEKSSecretRabbitMQ
#     Type: AWSQS::Kubernetes::Helm
#     Properties:
#       ClusterID: !GetAtt ExistingVpcStack.Outputs.EKSClusterName
#       Namespace: !Sub ${AWS::StackName}
#       Name: !Sub ${AWS::StackName}
#       Repository: https://raw.githubusercontent.com/CloudVE/helm-charts/master/
#       Chart: cloudve/galaxy
#       Values:
#         # rabbitmq.deploy: false
#         # rabbitmq.port: 5671
#         # rabbitmq.protocol: amqps
#         # rabbitmq.existingCluster:  !Select [0, !Split [":", !Select [1, !Split ["//", !Select [ 0, !GetAtt RabbitMQBroker.AmqpEndpoints ]]]]]
#         # rabbitmq.existingSecret: galaxy.credentials.rabbitmq
#         postgresql.deploy: false
#         postgresql.existingDatabase: !GetAtt AuroraPostgresCluster.Endpoint.Address
#         postgresql.galaxyDatabaseUser: galaxyuser
#         postgresql.galaxyConnectionParams: ""
#         postgresql.galaxyExistingSecret: galaxydbuser.credentials.postgresql
#         cvmfs.deploy: false
#         refdata.enabled: false
#         s3csi.deploy: false
#         ingress.path: "/"
#         ingress.hosts[0].paths[0].path: "/*"
#         ingress.ingressClassName: "alb"
#         ingress.annotations."alb\.ingress\.kubernetes\.io/target-type": "ip"
#         ingress.annotations."alb\.ingress\.kubernetes\.io/group\.name": "galaxy"
#         ingress.annotations."alb\.ingress\.kubernetes\.io/scheme": "internet-facing"
#         ingress.annotations."alb\.ingress\.kubernetes\.io/group\.order": "99"
#         ingress.canary.enabled: false
#         tusd.ingress.ingressClassName: "alb"
#         tusd.ingress.annotations."alb\.ingress\.kubernetes\.io/target-type": "ip"
#         tusd.ingress.annotations."alb\.ingress\.kubernetes\.io/group\.name": "galaxy"
#         tusd.ingress.annotations."alb\.ingress\.kubernetes\.io/scheme": "internet-facing"
#         persistence.accessMode: "ReadWriteOnce"

#   GetELBDNS:
#     DependsOn: GalaxyHelm
#     Type: "AWSQS::Kubernetes::Get"
#     Properties:
#       ClusterName: !GetAtt ExistingVpcStack.Outputs.EKSClusterName
#       Namespace: !Sub ${AWS::StackName}
#       Name: !Sub 'ingresses/${AWS::StackName}'
#       JsonPath: '{.status.loadBalancer.ingress[0].hostname}'

# Outputs:
#   Endpoint:
#     Value: !GetAtt GetELBDNS.Response
